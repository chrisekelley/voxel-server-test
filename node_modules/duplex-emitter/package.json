{
  "name": "duplex-emitter",
  "description": "Turns a duplex stream into an event emitter",
  "version": "0.1.8",
  "author": {
    "name": "Pedro Teixeira",
    "email": "pedro.teixeira@gmail.com"
  },
  "contributors": [
    {
      "name": "Pedro Teixeira"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/pgte/duplex-emitter.git"
  },
  "bugs": {
    "url": "http://github.com/pgte/duplex-emitter/issues"
  },
  "engines": [
    "node >= 0.8.1"
  ],
  "main": "./index.js",
  "dependencies": {
    "duplexer": "0.0.2",
    "emit-stream": "0.1.x",
    "JSONStream": "0.4.x"
  },
  "devDependencies": {
    "tap": "0.3.x"
  },
  "scripts": {
    "test": "node node_modules/tap/bin/tap.js tests/index.js"
  },
  "readme": "# duplex-emitter\n\n[![Build Status](https://secure.travis-ci.org/pgte/duplex-emitter.png)](http://travis-ci.org/pgte/duplex-emitter)\n\nTurns a duplex stream into an event emitter.\n\n## Create\n\n```javascript\nvar s = net.connect(...);\n\nvar duplexEmitter = require('duplex-emitter');\nvar emitter = duplexEmitter(s);\n```\n\n## Emit\n\nYou can emit events. They will be serialized (to JSON) and piped to the stream.\n\n```javascript\nemitter.emit('event1', arg1, arg2); // Send event to the other side\n```\n\n## Receive\n\nYou can listen for events from the peer:\n\n```javascript\n// Got event from the peer\nemitter.on('event2', function(arg1, arg2), {\n  //...\n})\n```",
  "readmeFilename": "README.md",
  "_id": "duplex-emitter@0.1.8",
  "_from": "duplex-emitter@0.1.8"
}
